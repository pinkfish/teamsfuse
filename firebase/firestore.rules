rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /Clubs/{club} {
      allow read: if isSignedIn();
      // Only allow writes when the member is setup correctly.
      allow update, delete: if isSignedIn() &&
          resource.data.members[request.auth.uid].admin;
      allow create: if isSignedIn() &&
          request.resource.data.members[request.auth.uid].admin;
    }

    match /Games/{club} {
      allow read: if isSignedIn() &&
         get(/databases/$(database)/documents/Seasons/$(request.resource.seasonUid)).users[request.auth.uid].added;
      allow update, delete: if isSignedIn();
      // Only allow a create if the shared data exists and the team exists.
      allow create: if isSignedIn() &&
          exists(/databases/$(database)/documents/GamesShared/$(request.resource.sharedGameUid)) &&
          exists(/databases/$(database)/documents/Team/$(request.resource.teamUid));
    }

    match /GamesShared/{sharedGame} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    match /Invites/{invite} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    match /League/{league} {
      allow read: if true;
      allow update, delete: if isSignedIn() &&
          request.resource.data.members[request.auth.uid].admin == true;
      // Only allow a create if they are set as an admin.
      allow create: if isSignedIn() &&
          request.resource.data.members[request.auth.uid].admin == true;
    }

    match /LeagueDivision/{leagueDivision} {
      allow read: if true;
      allow update, delete: if isSignedIn();
      allow create: if isSignedIn() &&
          exists(/databases/$(database)/documents/LeagueSeason/$(request.resource.data.seasonUid).added);
    }

    match /LeagueSeason/{leagueSeason} {
      allow read: if true;
      allow write: if isSignedIn();
      allow create: if isSignedIn() &&
          exists(/databases/$(database)/documents/League/$(request.resource.data.leagueUid));
    }

    match /LeagueTeam/{leagueTeam} {
      allow read: if true;
      allow write: if isSignedIn();
    }

    match /MessageRecipients/{recipient} {
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    match /Messages/{message} {
      match /{ALLSUBCOLLECTIONS=**} {
            allow read: if isSignedIn();
            allow write: if isSignedIn();
      }
      allow read: if isSignedIn();
      allow write: if isSignedIn();
    }

    match /Seasons/{season} {
      allow read: if isSignedIn() &&
        (request.data.users[request.auth.uid].added);
      allow write: if isSignedIn();
    }

    match /Teams/{team} {
      match /{ALLSUBCOLLECTIONS=**} {
        allow read: if isSignedIn();
        allow write: if isSignedIn();
      }
      allow read: if isSignedIn() &&
        (request.data.users[request.auth.uid].added ||
        request.data.admins[request.auth.uid]);
      allow write: if isSignedIn();
    }

    // Main users table
    match /users/{userId} {
      allow read, update, delete: if isSignedIn() &&
          request.auth.uid == userId;
      allow create: if isSignedIn() && request.auth.uid != null;
    }

    // UserData table (profile details).
    match /UserData/{userId} {
      allow read, update, delete: if isSignedIn() &&
          request.auth.uid == resource.id;
      allow create: if isSignedIn() && request.auth.uid != null &&
          request.resource.id == request.auth.uid && request.resource.data.createdAt == request.time;
    }

    match /Players/{player} {
      allow update, delete: if isSignedIn() &&
          resource.data.user[request.auth.uid].added;
      allow create: if isSignedIn() &&
          request.resource.data.user[request.auth.uid].added;
      allow read: if isSignedIn();
    }
  }
}
