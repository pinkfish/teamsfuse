# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

import '../../fastlane/fastlane.common'

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :firebase do
    build_number = number_of_commits(all: true)
    changelog_from_git_commits
    gradle(task: "assembleRelease")


    firebase_app_distribution(
              apk_path: '../build/app/outputs/apk/release/app-release.apk',
              app: "1:400199897683:android:68d34f1dd483cffe08aca6",
              testers: "pinkfishfrog@gmail.com",
              release_notes: "Lots of amazing new features to test out!",
   )
  end

  desc "Create the icons"
  private_lane :create_icons do |options|
      # Icons
      android_appicon(
        appicon_icon_types: [:launcher],
        appicon_image_file: '../assets/images/app_iconx1024.png',
        appicon_path: 'app/src/main/res/mipmap',
        appicon_filename: 'ic_launcher'
      )

      # Splash screens
      #android_appicon(
      #  appicon_icon_types: [:splash_port],
      #  appicon_image_file: '../assets/icons/screen.png',
      #  appicon_path: 'app/src/main/res/drawable',
      #  appicon_filename: 'screen'
      #)
      #android_appicon(
      #  appicon_icon_types: [:splash_land],
      #  appicon_image_file: '../assets/icons/screen_land.png',
      #  appicon_path: 'app/src/main/res/drawable',
      #  appicon_filename: 'screen'
      #)
  end

  desc "Build and push to play store track"
    private_lane :build_and_push_to_play_store_track do |options|
      release_notes(OS: 'android')

      # Icons
      create_icons()

      sh ("cd ../.. && flutter build appbundle --target-platform android-arm,android-arm64,android-x64 --build-name=#{@build_name} --build-number=#{@build_number}")
      upload_to_play_store(
        track: options[:track],
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        json_key: './api-dash.json',
        #skip_upload_screenshots: false,
        #skip_upload_images: false
      )
      tag_branch(OS: "android")
    end

  desc "Build and push to play store track with github"
    private_lane :build_and_push_to_play_store_track_github do |options|
      # Use the github run number + 300 to be past the existing build numbers.
      @build_number = ENV["GITHUB_RUN_NUMBER"].to_i + 380
      puts @build_number

      github_api_token = ENV["FL_GITHUB_RELEASE_API_TOKEN"]
      UI.user_error!("Please provide a GitHub API token using `FL_GITHUB_RELEASE_API_TOKEN`") if github_api_token.to_s.length == 0
      # @build_number=number_of_commits()


      @build_name=options[:version].delete("v")
      release=get_github_release(url: "pinkfish/teamsfuse", version: options[:version], api_token: github_api_token)
      puts release["name"]
      body = release["body"]
      File.write("#{Dir.pwd}/metadata/android/en-US/changelogs/#{@build_number}.txt", "#{body[0,500]}")
      puts body

      # Icons
      create_icons()

      sh ("cd ../.. && flutter build appbundle --target-platform android-arm,android-arm64,android-x64 --build-name=#{@build_name} --build-number=#{@build_number}")
      upload_to_play_store(
        track: options[:track],
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        json_key: './api-dash.json',
        #skip_upload_screenshots: false,
        #skip_upload_images: false
      )
    end

  desc "Submit a new Beta Build to App store"
  lane :beta_local do
      build_and_push_to_play_store_track(track: "beta")
  end

  desc "Submit a new Alpha Build to App store"
  lane :alpha do |options|
      puts options[:version]
      build_and_push_to_play_store_track_github(track: "alpha", version: options[:version])
  end
end
