# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to firebase"
  lane :firebase do
    project = 'Runner.xcodeproj'

    appicon(
       appicon_devices: [:ipad, :iphone, :ios_marketing],
       appicon_path: "Runner/Assets.xcassets",
       appicon_image_file: '../assets/images/app_iconx1024.png'
    )

    build_app(workspace: "Runner.xcworkspace", scheme: "Runner", export_xcargs: "-allowProvisioningUpdates")
    firebase_app_distribution(
            app: "1:400199897683:ios:ce8c89497900217008aca6",
            release_notes: "Lots of amazing new features to test out!"
    )
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    github_api_token = ENV["FL_GITHUB_RELEASE_API_TOKEN"]
    apple_api_p8 = "./app-store-api.p8"
    UI.user_error!("Please provide a GitHub API token using `FL_GITHUB_RELEASE_API_TOKEN`") if github_api_token.to_s.length == 0
    UI.user_error!("Please provide a version using `version`") if options[:version].to_s.length == 0
    version = options[:version]
    @build_name=options[:version].delete("v")

    project = 'Runner.xcodeproj'

    build_number = latest_testflight_build_number(
      app_identifier: CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier),
      version: version,
      initial_build_number: 30
    )
    increment_build_number(
      build_number: build_number + 1,
      xcodeproj: project
    )

    begin
      commit_version_bump(
        message: "Version Bump to v#{@build_name}",
        xcodeproj: "./Runner.xcodeproj",
      )
      add_git_tag(
        tag: version,
        force: true,
      )
      push_to_git_remote(tags: true, force: true)
    rescue => error
      puts error
      puts "Error commiting version number"
    end

    version = get_version_number(xcodeproj: project,)
    desc "Version $version"

    #get_certificates           # invokes cert
    #get_provisioning_profile   # invokes sigh
    api_key = app_store_connect_api_key(
       key_id: "D39Z87Q2S3",
       issuer_id: "fc631508-7672-4236-a15a-21063621560e",
       key_filepath: "./app-store-api.p8",
       duration: 1200, # optional
       in_house: false, # optional but may be required if using match/sigh
     )

    release=get_github_release(url: "pinkfish/teamsfuse", version: options[:version], api_token: github_api_token)

    puts release["name"]

    body = release["body"]

    appicon(
       appicon_devices: [:ipad, :iphone, :ios_marketing],
       appicon_path: "Runner/Assets.xcassets",
       appicon_image_file: '../assets/images/appiconx1024.png'
    )

    build_app(workspace: "Runner.xcworkspace", scheme: "Runner", export_xcargs: "-allowProvisioningUpdates")
    upload_to_testflight(changelog: body)
  end
end

